#ex1
class string1:
    def __init__(self):
        self.inp = ""
    def getString(self):
        self.inp = input()
    def printString(self):
        print(self.inp.upper())

inp = string1()
inp.getString()
inp.printString()



#ex2
class Shape:
    def area(self):
        return 0
class Square(Shape):
    def __init__(self, length):
        self.length = length
    def area(self):
        return self.length ** 2

x = Square(int(input()))
print(x.area())



#ex3
class Rechtangle(Shape):
    def __init__(self, length,width):
        self.length = length
        self.width = width
    def area(self):
        return self.length * self.width

x = Rechtangle(int(input()), int(input()))
print(x.area())



#ex4
import math

class Point:
    def __init__(self, x, y):
        self.x = x
        self.y = y
    
    def show(self):
        print(f"Coordinates of the point: ({self.x}, {self.y})")
    
    def move(self, x2, y2):
        self.x = x2
        self.y = y2
    
    def dist(self, point):
        return float(math.sqrt((self.x - point.x)**2 + (self.y - point.y)**2))

point1 = Point(int(input()), int(input()))
point2 = Point(int(input()), int(input()))

point1.show()
point2.show()
point1.move(3, 5)
point2.move(4, 7)
point1.show()
point2.show()
print(point1.dist(point2))



Ex5
class Account:
    def __init__(self, owner, balance):
        self.owner = owner
        self.balance = balance
    def deposit(self, money):
        self.balance += money
        print(f"Deposit is {money} of tenge")
    def withdrew(self, money):
        if 0< money <= self.balance:
            self.balance -= money
            print(f"Withdrew {money} of tenge")
        else:
            print("Invalid amount of money")
acc = Account(input(), int(input()))
acc.deposit(1000)
acc.withdrew(200)
    


#ex6
import math
def is_prime(num):
    if num < 2:
        return False
    for i in range(2, int(math.sqrt(num)) + 1):
        if num % i == 0:
            return False
    return True

numbers = [int(x) for x in input().split()]
primes = list(filter(lambda x: is_prime(x), numbers))

print(primes)
